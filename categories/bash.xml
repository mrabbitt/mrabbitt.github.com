<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>①＝③ (bash)</title><link>http://oneis3.com</link><description>One is 3</description><lastBuildDate>Sun, 13 Jan 2013 00:23:35 GMT</lastBuildDate><generator>nikola</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Open in SourceTree from IntelliJ IDEA</title><link>http://oneis3.com/posts/open-in-sourcetree-from-intellij-idea.html</link><description>&lt;p&gt;I'm quite fond of &lt;a href="http://www.sourcetreeapp.com/"&gt;SourceTree&lt;/a&gt; for managing Git repositories (it does Mercurial as well).  SourceTree comes with an &lt;code&gt;stree&lt;/code&gt; command to open repositories from the command line.  I wanted to set up an &lt;a href="http://www.jetbrains.com/idea/webhelp/external-tools.html"&gt;external tool in IntelliJ IDEA&lt;/a&gt; to the repo containing the current source file, &lt;code&gt;stree&lt;/code&gt; only works if you call it without any arguments with a current working directory of the root level of a repo, or if you pass the path to the root level of a repo as an argument.  This is fine if you have only a single Git source root in your IntelliJ project:  You can just use call &lt;code&gt;stree&lt;/code&gt; directly with the &lt;code&gt;$ProjectFileDir$&lt;/code&gt; macro as a parameter.  But if you have multiple modules in your project with different Git source roots, it gets more difficult.  I tried using the &lt;code&gt;$ModuleFileDir$&lt;/code&gt; macro, but this seems to the directory where the &lt;code&gt;.iml&lt;/code&gt; file for the module is stored, which is not the source root of the module.&lt;/p&gt;
&lt;p&gt;So, I ended up writing a small wrapper for &lt;code&gt;stree&lt;/code&gt; which can take the path to any file or directory within a Git or Mercurial repo as an argument and invokes &lt;code&gt;stree&lt;/code&gt; with the path to the root of the repo:&lt;/p&gt;
&lt;script src="https://gist.github.com/3051104.js"&gt;&lt;/script&gt;</description><guid>http://oneis3.com/posts/open-in-sourcetree-from-intellij-idea.html</guid><pubDate>Thu, 05 Jul 2012 12:11:00 GMT</pubDate></item><item><title>Diff-ing .zip files with FileMerge</title><link>http://oneis3.com/posts/diff-ing-zip-files-with-filemerge.html</link><description>&lt;p&gt;This isn't particularly elegant, but you can use the FileMerge application that comes with Mac OS X developer tools to compare the contents of zip files using a custom filter.&lt;/p&gt;
&lt;p&gt;Create a script &lt;code&gt;~/bin/zip_filemerge_filter.bash&lt;/code&gt; with contents:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="c"&gt;##&lt;/span&gt;
&lt;span class="c"&gt;#  List the size, CR-32 checksum, and file path of each file in a zip archive,&lt;/span&gt;
&lt;span class="c"&gt;#  sorted in order by file path.&lt;/span&gt;
&lt;span class="c"&gt;##&lt;/span&gt;
&lt;span class="nb"&gt;unzip&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="s"&gt;"${1}"&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;cut&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;59&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;49&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;57&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;sort&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;k3&lt;/span&gt;
&lt;span class="nb"&gt;exit&lt;/span&gt; $?
&lt;span class="n"&gt;Make&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;script&lt;/span&gt; &lt;span class="n"&gt;executable&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;chmod&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;zip_filemerge_filter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bash&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Open FileMerge, open the Preferences, and go to the "Filters" tab. Add an item to the list with:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Extension: &lt;code&gt;zip&lt;/code&gt; &lt;em&gt;(I've also added the filer for &lt;code&gt;.jar&lt;/code&gt; and &lt;code&gt;.war&lt;/code&gt; files.)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Filter: &lt;code&gt;~/bin/zip_filemerge_filter.bash $(FILE)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Display: &lt;em&gt;Filtered&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Apply: &lt;em&gt;No&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Then use FileMerge (or the command line &lt;code&gt;opendiff&lt;/code&gt; wrapper) to compare two .zip files.&lt;/p&gt;
&lt;p&gt;This won't let you diff the contents of files within the zip archives, but will let you quickly see which files appear within one only archive and which files exist in both but have different content (i.e. different size and/or checksum).&lt;/p&gt;
&lt;p&gt;(&lt;em&gt;Cross-posted on
&lt;a href="http://stackoverflow.com/questions/587442/is-there-a-safe-way-to-run-a-diff-on-two-zip-compressed-files/4429169#4429169"&gt;StackOverflow&lt;/a&gt; and &lt;a href="http://michaelrabbitt.blogspot.com/2010/12/diff-ing-zip-files-with-filemerge.html"&gt;my old blogger blog&lt;/a&gt;.&lt;/em&gt;)&lt;/p&gt;</description><guid>http://oneis3.com/posts/diff-ing-zip-files-with-filemerge.html</guid><pubDate>Mon, 13 Dec 2010 10:36:00 GMT</pubDate></item></channel></rss>